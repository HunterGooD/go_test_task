{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple api for music librarry",
        "title": "Music librarry API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "0.0.1alpha"
    },
    "basePath": "/",
    "paths": {
        "/song/create": {
            "post": {
                "description": "Creating",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Song"
                ],
                "summary": "Create song",
                "parameters": [
                    {
                        "description": "Song insert",
                        "name": "song_insert",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.SongInsert"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Params not valid",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Can not find ID",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/song/list": {
            "get": {
                "description": "Getting songs with pagination and filtered",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Song"
                ],
                "summary": "get list songs with filters",
                "parameters": [
                    {
                        "type": "string",
                        "name": "group_name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "link",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "p",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "release_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "description": "Filters",
                        "name": "filters",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/entity.SongFilters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/entity.SongListResponse"
                        }
                    },
                    "400": {
                        "description": "Params not valid",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Can not find ID",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/song/{song_id}/text": {
            "get": {
                "description": "Get text with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Song"
                ],
                "summary": "get text songs with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Song id",
                        "name": "song_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/entity.SongTextResponse"
                        }
                    },
                    "400": {
                        "description": "Params not valid",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Can not find ID",
                        "schema": {
                            "$ref": "#/definitions/entity.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "entity.Group": {
            "type": "object",
            "required": [
                "g_name"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "description": "DeletedAt nil value if not deleted",
                    "type": "string"
                },
                "g_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Song": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "group": {
                    "$ref": "#/definitions/entity.Group"
                },
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "update_at": {
                    "type": "string"
                }
            }
        },
        "entity.SongFilters": {
            "type": "object",
            "properties": {
                "group_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "release_date": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "entity.SongInsert": {
            "type": "object",
            "required": [
                "group",
                "song"
            ],
            "properties": {
                "group": {
                    "type": "string"
                },
                "song": {
                    "type": "string"
                }
            }
        },
        "entity.SongListResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "songs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Song"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "entity.SongTextResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "text": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        }
    }
}